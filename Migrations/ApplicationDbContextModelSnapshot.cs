// <auto-generated />
using System;
using Donde_Compro.Datos;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Donde_Compro.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.13")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Donde_Compro.Models.Orden", b =>
                {
                    b.Property<int>("OrdenId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("OrdenId"), 1L, 1);

                    b.Property<int>("Cantidad")
                        .HasColumnType("int");

                    b.Property<DateTime>("DiaDeCompra")
                        .HasColumnType("date");

                    b.Property<int?>("ProductoId")
                        .IsRequired()
                        .HasColumnType("int");

                    b.Property<int?>("UsuarioId")
                        .IsRequired()
                        .HasColumnType("int");

                    b.HasKey("OrdenId");

                    b.HasIndex("ProductoId");

                    b.HasIndex("UsuarioId")
                        .IsUnique();

                    b.ToTable("Orden");
                });

            modelBuilder.Entity("Donde_Compro.Models.Producto", b =>
                {
                    b.Property<int>("ProductoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ProductoId"), 1L, 1);

                    b.Property<int>("CategoriaId")
                        .HasColumnType("int");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasMaxLength(350)
                        .HasColumnType("nvarchar(350)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<float>("Precio")
                        .HasColumnType("real");

                    b.Property<DateTime>("Publicado")
                        .HasColumnType("date");

                    b.HasKey("ProductoId");

                    b.HasIndex("CategoriaId");

                    b.ToTable("Producto");
                });

            modelBuilder.Entity("Donde_Compro.Models.ProductoCategoria", b =>
                {
                    b.Property<int>("CategoriaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CategoriaId"), 1L, 1);

                    b.Property<string>("NombreCategoria")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("CategoriaId");

                    b.ToTable("ProductoCategoria");
                });

            modelBuilder.Entity("Donde_Compro.Models.Rol", b =>
                {
                    b.Property<int>("RolId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RolId"), 1L, 1);

                    b.Property<int>("RolType")
                        .HasColumnType("int");

                    b.HasKey("RolId");

                    b.ToTable("Rol");
                });

            modelBuilder.Entity("Donde_Compro.Models.Usuario", b =>
                {
                    b.Property<int>("UsuarioId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UsuarioId"), 1L, 1);

                    b.Property<string>("Clave")
                        .IsRequired()
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.Property<string>("Correo")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Direccion")
                        .IsRequired()
                        .HasMaxLength(70)
                        .HasColumnType("nvarchar(70)");

                    b.Property<DateTime>("Nacimiento")
                        .HasColumnType("date");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("Roltype")
                        .HasColumnType("int");

                    b.Property<int?>("UsuarioPagoId")
                        .IsRequired()
                        .HasColumnType("int");

                    b.HasKey("UsuarioId");

                    b.HasIndex("Roltype");

                    b.HasIndex("UsuarioPagoId")
                        .IsUnique();

                    b.ToTable("Usuario");
                });

            modelBuilder.Entity("Donde_Compro.Models.UsuarioPago", b =>
                {
                    b.Property<int>("UsuarioPagoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UsuarioPagoId"), 1L, 1);

                    b.Property<string>("TipoDePago")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UsuarioPagoId");

                    b.ToTable("UsuarioPago");
                });

            modelBuilder.Entity("Donde_Compro.Models.Orden", b =>
                {
                    b.HasOne("Donde_Compro.Models.Producto", "Producto")
                        .WithMany("Orden")
                        .HasForeignKey("ProductoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Donde_Compro.Models.Usuario", "Usuario")
                        .WithOne("Orden")
                        .HasForeignKey("Donde_Compro.Models.Orden", "UsuarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Producto");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("Donde_Compro.Models.Producto", b =>
                {
                    b.HasOne("Donde_Compro.Models.ProductoCategoria", "ProductoCategoria")
                        .WithMany("Producto")
                        .HasForeignKey("CategoriaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ProductoCategoria");
                });

            modelBuilder.Entity("Donde_Compro.Models.Usuario", b =>
                {
                    b.HasOne("Donde_Compro.Models.Rol", "Rol")
                        .WithMany("Usuario")
                        .HasForeignKey("Roltype")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Donde_Compro.Models.UsuarioPago", "UsuarioPago")
                        .WithOne("Usuario")
                        .HasForeignKey("Donde_Compro.Models.Usuario", "UsuarioPagoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Rol");

                    b.Navigation("UsuarioPago");
                });

            modelBuilder.Entity("Donde_Compro.Models.Producto", b =>
                {
                    b.Navigation("Orden");
                });

            modelBuilder.Entity("Donde_Compro.Models.ProductoCategoria", b =>
                {
                    b.Navigation("Producto");
                });

            modelBuilder.Entity("Donde_Compro.Models.Rol", b =>
                {
                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("Donde_Compro.Models.Usuario", b =>
                {
                    b.Navigation("Orden")
                        .IsRequired();
                });

            modelBuilder.Entity("Donde_Compro.Models.UsuarioPago", b =>
                {
                    b.Navigation("Usuario")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
